// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: identify.proto

package server

import (
	"context"

	"github.com/ZChen470/eShop/rpc/identify/identify"
	"github.com/ZChen470/eShop/rpc/identify/internal/logic"
	"github.com/ZChen470/eShop/rpc/identify/internal/svc"
)

type IdentifyServer struct {
	svcCtx *svc.ServiceContext
	identify.UnimplementedIdentifyServer
}

func NewIdentifyServer(svcCtx *svc.ServiceContext) *IdentifyServer {
	return &IdentifyServer{
		svcCtx: svcCtx,
	}
}

func (s *IdentifyServer) Register(ctx context.Context, in *identify.RegisterReq) (*identify.CommonResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *IdentifyServer) Login(ctx context.Context, in *identify.LoginReq) (*identify.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *IdentifyServer) GetProfile(ctx context.Context, in *identify.GetProfileReq) (*identify.UserProfile, error) {
	l := logic.NewGetProfileLogic(ctx, s.svcCtx)
	return l.GetProfile(in)
}

func (s *IdentifyServer) UpdateProfile(ctx context.Context, in *identify.UpdateProfileReq) (*identify.CommonResp, error) {
	l := logic.NewUpdateProfileLogic(ctx, s.svcCtx)
	return l.UpdateProfile(in)
}
