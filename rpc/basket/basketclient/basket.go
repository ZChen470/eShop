// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: basket.proto

package basketclient

import (
	"context"

	"github.com/ZChen470/eShop/rpc/basket/basket"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddItemReq    = basket.AddItemReq
	Cart          = basket.Cart
	CartItem      = basket.CartItem
	ClearCartReq  = basket.ClearCartReq
	CommonResp    = basket.CommonResp
	DeleteItemReq = basket.DeleteItemReq
	GetCartReq    = basket.GetCartReq
	GetCartResp   = basket.GetCartResp
	UpdateItemReq = basket.UpdateItemReq

	Basket interface {
		GetCart(ctx context.Context, in *GetCartReq, opts ...grpc.CallOption) (*GetCartResp, error)
		AddItem(ctx context.Context, in *AddItemReq, opts ...grpc.CallOption) (*CommonResp, error)
		UpdateItem(ctx context.Context, in *UpdateItemReq, opts ...grpc.CallOption) (*CommonResp, error)
		DeleteItem(ctx context.Context, in *DeleteItemReq, opts ...grpc.CallOption) (*CommonResp, error)
		ClearCart(ctx context.Context, in *ClearCartReq, opts ...grpc.CallOption) (*CommonResp, error)
	}

	defaultBasket struct {
		cli zrpc.Client
	}
)

func NewBasket(cli zrpc.Client) Basket {
	return &defaultBasket{
		cli: cli,
	}
}

func (m *defaultBasket) GetCart(ctx context.Context, in *GetCartReq, opts ...grpc.CallOption) (*GetCartResp, error) {
	client := basket.NewBasketClient(m.cli.Conn())
	return client.GetCart(ctx, in, opts...)
}

func (m *defaultBasket) AddItem(ctx context.Context, in *AddItemReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := basket.NewBasketClient(m.cli.Conn())
	return client.AddItem(ctx, in, opts...)
}

func (m *defaultBasket) UpdateItem(ctx context.Context, in *UpdateItemReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := basket.NewBasketClient(m.cli.Conn())
	return client.UpdateItem(ctx, in, opts...)
}

func (m *defaultBasket) DeleteItem(ctx context.Context, in *DeleteItemReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := basket.NewBasketClient(m.cli.Conn())
	return client.DeleteItem(ctx, in, opts...)
}

func (m *defaultBasket) ClearCart(ctx context.Context, in *ClearCartReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := basket.NewBasketClient(m.cli.Conn())
	return client.ClearCart(ctx, in, opts...)
}
