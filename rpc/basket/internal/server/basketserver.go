// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: basket.proto

package server

import (
	"context"

	"github.com/ZChen470/eShop/rpc/basket/basket"
	"github.com/ZChen470/eShop/rpc/basket/internal/logic"
	"github.com/ZChen470/eShop/rpc/basket/internal/svc"
)

type BasketServer struct {
	svcCtx *svc.ServiceContext
	basket.UnimplementedBasketServer
}

func NewBasketServer(svcCtx *svc.ServiceContext) *BasketServer {
	return &BasketServer{
		svcCtx: svcCtx,
	}
}

func (s *BasketServer) GetCart(ctx context.Context, in *basket.GetCartReq) (*basket.GetCartResp, error) {
	l := logic.NewGetCartLogic(ctx, s.svcCtx)
	return l.GetCart(in)
}

func (s *BasketServer) AddItem(ctx context.Context, in *basket.AddItemReq) (*basket.CommonResp, error) {
	l := logic.NewAddItemLogic(ctx, s.svcCtx)
	return l.AddItem(in)
}

func (s *BasketServer) UpdateItem(ctx context.Context, in *basket.UpdateItemReq) (*basket.CommonResp, error) {
	l := logic.NewUpdateItemLogic(ctx, s.svcCtx)
	return l.UpdateItem(in)
}

func (s *BasketServer) DeleteItem(ctx context.Context, in *basket.DeleteItemReq) (*basket.CommonResp, error) {
	l := logic.NewDeleteItemLogic(ctx, s.svcCtx)
	return l.DeleteItem(in)
}

func (s *BasketServer) ClearCart(ctx context.Context, in *basket.ClearCartReq) (*basket.CommonResp, error) {
	l := logic.NewClearCartLogic(ctx, s.svcCtx)
	return l.ClearCart(in)
}
